{"version":3,"sources":["warble.js"],"names":["error","value","Error","objectTypes","typesReference","index","size","length","toLowerCase","WarbleErrorList","errors","push","name","WarbleCore","fn","is","email","test","numeric","integer","positive","negative","even","Number","odd","validate","required","isRequired","undefined","pattern","core","RegExp","min","Infinity","max","minlength","maxlength","type","types","errorList","hasErrors","range","to","hasOwnProperty","conditional","options","object","toString","call","getErrorList","createErrorList","addError","WarbleFragment","valid","invalid","param","parent","response","WarbleModel","model","data","results","validation","Warble","warble","module","exports"],"mappings":"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","file":"warble.min.js","sourcesContent":["{\n\n\tlet\n\n\t\tobjectTypes = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Object', 'Error', 'Symbol'],\n\n\t\ttypesReference = {};\n\n\tfor (let index = 0, size = objectTypes.length; index < size; index++)\n\n\t\ttypesReference[`[object ${objectTypes[index]}]`] = objectTypes[index].toLowerCase();\n\n\tfunction error(value) {\n\n\t\treturn new Error(value);\n\n\t}\n\n\tclass WarbleErrorList {\n\n\t\tconstructor() {\n\n\t\t\tthis.errors = [];\n\n\t\t}\n\n\t\taddError(error) {\n\n\t\t\tif (typeof error === 'string')\n\n\t\t\t\tthis.errors.push(error);\n\n\t\t\telse if (typeof error === 'function' && error.name)\n\n\t\t\t\tthis.errors.push(error.name);\n\n\t\t}\n\n\t\thasErrors() {\n\n\t\t\treturn this.errors.length > 0;\n\n\t\t}\n\n\t}\n\n\tclass WarbleCore {\n\n\t\tconstructor() {\n\n\t\t\tthis.fn = {\n\t\t\t\tis: {\n\t\t\t\t\t// https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\n\t\t\t\t\temail: (value) => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value),\n\t\t\t\t\tnumeric: (value) => /^\\-?\\d+(?:\\.\\d+)?$/.test(value),\n\t\t\t\t\tinteger: (value) => /^\\-?\\d+$/.test(value),\n\t\t\t\t\tpositive: (value) => /^\\d+(?:\\.\\d+)?$/.test(value),\n\t\t\t\t\tnegative: (value) => /^\\-\\d+(?:\\.\\d+)?$/.test(value),\n\t\t\t\t\teven: (value) => (Number(value) % 2) === 0,\n\t\t\t\t\todd: (value) => (Number(value) % 2) > 0\n\t\t\t\t},\n\t\t\t\tvalidate: {\n\t\t\t\t\trequired: (value, isRequired) => isRequired ? value !== undefined : true,\n\t\t\t\t\tpattern: (value, pattern) => (core.is(pattern, 'regexp') ? pattern : new RegExp(pattern)).test(value),\n\t\t\t\t\tmin: (value, min = -Infinity) => (Number(value) || 0) >= (Number(min) || 0),\n\t\t\t\t\tmax: (value, max = Infinity) => (Number(value) || 0) <= (Number(max) || 0),\n\t\t\t\t\tminlength: (value, min = 0) => typeof value === 'string' ? value.length >= (Number(min) || 0) : false,\n\t\t\t\t\tmaxlength: (value, max = Infinity) => typeof value === 'string' ? value.length <= (Number(max) || 0) : false,\n\t\t\t\t\ttype: (value, type) => core.type(value) === type,\n\t\t\t\t\tis: (value, types) => core.is(value, types, true),\n\t\t\t\t\tis(value, types) {\n\n\t\t\t\t\t\tvar errorList = core.is(value, types, true);\n\n\t\t\t\t\t\treturn errorList.hasErrors() ? errorList : true\n\n\t\t\t\t\t},\n\t\t\t\t\trange: (value, range = [-Infinity, Infinity]) => (core.is(range, 'array') && range.length > 1) ? Number(value) >= Number(range[0]) && Number(value) <= Number(range[1]) : false,\n\t\t\t\t\tequal(value, to)  {\n\n\t\t\t\t\t\treturn typeof this === 'object' && this.hasOwnProperty(to) ? value === this[to] : false;\n\n\t\t\t\t\t},\n\t\t\t\t\tconditional: (value, conditional) => conditional(value),\n\t\t\t\t\toptions(value, options) {\n\n\t\t\t\t\t\tif (core.is(options, 'array'))\n\n\t\t\t\t\t\t\tfor (let index = 0, size = options.length; index < size; index++)\n\n\t\t\t\t\t\t\t\tif (value === options[index])\n\n\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t},\n\t\t\t\t\tinstance: (value, object) => value instanceof object\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t\ttype(value) {\n\n\t\t\treturn value === null ? 'null' : (typeof value === 'object' || typeof value === 'function' ? typesReference[typesReference.toString.call(value)] || 'object' : typeof value);\n\n\t\t}\n\n\t\tis(value, types, getErrorList) {\n\n\t\t\tvar\n\n\t\t\t\terrorList = core.createErrorList(),\n\n\t\t\t\t{ fn, type } = this;\n\n\t\t\tif (type(types) === 'array') {\n\n\t\t\t\tfor (let index = 0, size = types.length; index < size; index++) {\n\n\t\t\t\t\tlet test = fn.is[types[index]];\n\n\t\t\t\t\tif (typeof test === 'function') {\n\n\t\t\t\t\t\tif (!test.call(this, value))\n\n\t\t\t\t\t\t\terrorList.addError(types[index]);\n\n\t\t\t\t\t} else if (!(type(value) === types[index]))\n\n\t\t\t\t\t\terrorList.addError(types[index]);\n\n\t\t\t\t}\n\n\t\t\t} else if (typeof fn.is[types] === 'function') {\n\n\t\t\t\tif (!fn.is[types].call(this, value))\n\n\t\t\t\t\terrorList.addError(types);\n\n\t\t\t} else if (!(type(value) === types))\n\n\t\t\t\terrorList.addError(types);\n\n\t\t\treturn getErrorList ? errorList : !errorList.hasErrors();\n\n\t\t}\n\n\t\tcreateErrorList() {\n\n\t\t\treturn new WarbleErrorList;\n\n\t\t}\n\n\t}\n\n\tlet core = new WarbleCore;\n\n\tclass WarbleFragment {\n\n\t\tconstructor(value) {\n\n\t\t\tthis.value = value;\n\n\t\t\tthis.valid = true;\n\n\t\t\tthis.invalid = false;\n\n\t\t\tthis.error = {};\n\n\t\t}\n\n\t\tvalidate(name, param, parent) {\n\n\t\t\tvar response = typeof core.fn.validate[name] === 'function' ? core.fn.validate[name].call(parent, this.value, param) : true;\n\n\t\t\tif (!response || response instanceof WarbleErrorList) {\n\n\t\t\t\tthis.valid = false;\n\n\t\t\t\tthis.invalid = true;\n\n\t\t\t\tthis.error[name] = true;\n\n\t\t\t\tif (response instanceof WarbleErrorList)\n\n\t\t\t\t\tfor (let index = 0, size = response.errors.length; index < size; index++)\n\n\t\t\t\t\t\tif (response.errors[index] !== name)\n\n\t\t\t\t\t\t\tthis.error[`${name}:${response.errors[index]}`] = true;\n\n\t\t\t} else\n\n\t\t\t\tdelete this.error[name];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass WarbleModel {\n\n\t\tconstructor(model) {\n\n\t\t\tif (typeof model === 'object')\n\n\t\t\t\tthis.model = model;\n\n\t\t\telse\n\n\t\t\t\tthrow error('WarbleModel expects an object.');\n\n\t\t}\n\n\t\tvalidate(data) {\n\n\t\t\tif (typeof data === 'object') {\n\n\t\t\t\tlet\n\n\t\t\t\t\tresponse = {\n\t\t\t\t\t\tresults: {},\n\t\t\t\t\t\tvalid: true,\n\t\t\t\t\t\tinvalid: false,\n\t\t\t\t\t\tdata: {}\n\t\t\t\t\t};\n\n\t\t\t\tfor (let index in this.model) {\n\n\t\t\t\t\tlet value = new WarbleFragment(data[index]);\n\n\t\t\t\t\tif (typeof this.model[index] === 'object')\n\n\t\t\t\t\t\tfor (let validation in this.model[index])\n\n\t\t\t\t\t\t\tif (value.validate(validation, this.model[index][validation], data).invalid)\n\n\t\t\t\t\t\t\t\t[response.valid, response.invalid] = [false, true];\n\n\t\t\t\t\tresponse.results[index] = value;\n\n\t\t\t\t\tresponse.data[index] = value.value;\n\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\n\t\t\t} else\n\n\t\t\t\tthrow error('WarbleModel.validate expects an object.');\n\n\t\t}\n\n\t}\n\n\tclass Warble extends WarbleCore {\n\n\t\tmodel(model) {\n\n\t\t\treturn new WarbleModel(model);\n\n\t\t}\n\n\t\tvalidate(value, options) {\n\n\t\t\tif (typeof options === 'object') {\n\n\t\t\t\tvar value = new WarbleFragment(value);\n\n\t\t\t\tfor (let index in options)\n\n\t\t\t\t\tvalue.validate(index, options[index]);\n\n\t\t\t\treturn value;\n\n\t\t\t} else\n\n\t\t\t\tthrow error('Warble.validate expects an object.');\n\n\t\t}\n\n\t}\n\n\tvar warble = new Warble;\n\n\tif (typeof module === 'object' && typeof module.exports === 'object')\n\n\t\tmodule.exports = warble;\n\n};\n"]}