{"version":3,"sources":["warble.js"],"names":["objectTypes","typesReference","index","size","length","toLowerCase","WarbleErrorList","errors","error","push","name","WarbleCore","hooks","is","email","value","test","numeric","integer","positive","negative","even","Number","odd","validate","required","isRequired","undefined","pattern","RegExp","min","Infinity","max","minlength","maxlength","type","core","types","errorList","createErrorList","addError","hasErrors","range","equal","to","hasOwnProperty","conditional","options","instance","object","toString","call","WarbleFragment","valid","invalid","param","parent","response","WarbleModel","model","Error","data","results","validation","Warble","warble","module","exports"],"mappings":"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","file":"warble.min.js","sourcesContent":["{\n\n\tlet\n\n\t\tobjectTypes = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Object', 'Error', 'Symbol'],\n\n\t\ttypesReference = {};\n\n\tfor (let index = 0, size = objectTypes.length; index < size; index++)\n\n\t\ttypesReference[`[object ${objectTypes[index]}]`] = objectTypes[index].toLowerCase();\n\n\tclass WarbleErrorList {\n\n\t\tconstructor() {\n\n\t\t\tthis.errors = [];\n\n\t\t}\n\n\t\taddError(error) {\n\n\t\t\tif (typeof error === 'string')\n\n\t\t\t\tthis.errors.push(error);\n\n\t\t\telse if (typeof error === 'function' && error.name)\n\n\t\t\t\tthis.errors.push(error.name);\n\n\t\t}\n\n\t\thasErrors() {\n\n\t\t\treturn this.errors.length > 0;\n\n\t\t}\n\n\t}\n\n\tclass WarbleCore {\n\n\t\tconstructor() {\n\n\t\t\tthis.hooks = {\n\t\t\t\tis: {\n\t\t\t\t\t// https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)\n\t\t\t\t\temail: (value) => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value),\n\t\t\t\t\tnumeric: (value) => /^\\-?\\d+(?:\\.\\d+)?$/.test(value),\n\t\t\t\t\tinteger: (value) => /^\\-?\\d+$/.test(value),\n\t\t\t\t\tpositive: (value) => /^\\d+(?:\\.\\d+)?$/.test(value),\n\t\t\t\t\tnegative: (value) => /^\\-\\d+(?:\\.\\d+)?$/.test(value),\n\t\t\t\t\teven: (value) => (Number(value) % 2) === 0,\n\t\t\t\t\todd: (value) => (Number(value) % 2) > 0\n\t\t\t\t},\n\t\t\t\tvalidate: {\n\t\t\t\t\trequired: (value, isRequired) => isRequired ? value !== undefined : true,\n\t\t\t\t\tpattern: (value, pattern) => (typeof pattern === 'object' && typeof pattern.test === 'function' ? pattern : new RegExp(pattern)).test(value),\n\t\t\t\t\tmin: (value, min = -Infinity) => (Number(value) || 0) >= (Number(min) || 0),\n\t\t\t\t\tmax: (value, max = Infinity) => (Number(value) || 0) <= (Number(max) || 0),\n\t\t\t\t\tminlength: (value, min = 0) => typeof value === 'string' ? value.length >= (Number(min) || 0) : false,\n\t\t\t\t\tmaxlength: (value, max = Infinity) => typeof value === 'string' ? value.length <= (Number(max) || 0) : false,\n\t\t\t\t\ttype: (value, type) => core.type(value) === type,\n\t\t\t\t\tis(value, types) {\n\n\t\t\t\t\t\tvar errorList = core.createErrorList();\n\n\t\t\t\t\t\tif (core.is(types, 'array')) {\n\n\t\t\t\t\t\t\tfor (let index = 0, size = types.length; index < size; index++)\n\n\t\t\t\t\t\t\t\tif (!core.is(value, types[index]))\n\n\t\t\t\t\t\t\t\t\terrorList.addError(types[index]);\n\n\t\t\t\t\t\t} else if (!core.is(value, types))\n\n\t\t\t\t\t\t\terrorList.addError(types);\n\n\t\t\t\t\t\treturn errorList.hasErrors() ? errorList : true;\n\n\t\t\t\t\t},\n\t\t\t\t\trange: (value, range) => (core.is(range, 'array') && range.length > 1) ? Number(value) >= Number(range[0]) && Number(value) <= Number(range[1]) : false,\n\t\t\t\t\tequal(value, to)  {\n\n\t\t\t\t\t\treturn typeof this === 'object' && this.hasOwnProperty(to) ? value === this[to] : false;\n\n\t\t\t\t\t},\n\t\t\t\t\tconditional: (value, conditional) => conditional(value),\n\t\t\t\t\toptions(value, options) {\n\n\t\t\t\t\t\tif (core.is(options, 'array'))\n\n\t\t\t\t\t\t\tfor (let index = 0, size = options.length; index < size; index++)\n\n\t\t\t\t\t\t\t\tif (value === options[index])\n\n\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t},\n\t\t\t\t\tinstance: (value, object) => value instanceof object\n\t\t\t\t}\n\t\t\t};\n\n\t\t}\n\n\t\ttype(value) {\n\n\t\t\treturn value === null ? 'null' : (typeof value === 'object' || typeof value === 'function' ? typesReference[typesReference.toString.call(value)] || 'object' : typeof value);\n\n\t\t}\n\n\t\tis(value, type) {\n\n\t\t\tvar { hooks } = this;\n\n\t\t\treturn typeof type === 'function' ? !!type(value) : (hooks.is.hasOwnProperty(type) ? !!hooks.is[type](value) : this.type(value) === type);\n\n\t\t}\n\n\t\tcreateErrorList() {\n\n\t\t\treturn new WarbleErrorList;\n\n\t\t}\n\n\t}\n\n\tlet core = new WarbleCore;\n\n\tclass WarbleFragment {\n\n\t\tconstructor(value) {\n\n\t\t\tthis.value = value;\n\n\t\t\tthis.valid = true;\n\n\t\t\tthis.invalid = false;\n\n\t\t\tthis.error = {};\n\n\t\t}\n\n\t\tvalidate(name, param, parent) {\n\n\t\t\tvar response = typeof core.hooks.validate[name] === 'function' ? core.hooks.validate[name].call(parent, this.value, param) : true;\n\n\t\t\tif (!response || response instanceof WarbleErrorList) {\n\n\t\t\t\tthis.valid = false;\n\n\t\t\t\tthis.invalid = true;\n\n\t\t\t\tthis.error[name] = true;\n\n\t\t\t\tif (response instanceof WarbleErrorList)\n\n\t\t\t\t\tfor (let index = 0, size = response.errors.length; index < size; index++)\n\n\t\t\t\t\t\tif (response.errors[index] !== name)\n\n\t\t\t\t\t\t\tthis.error[`${name}:${response.errors[index]}`] = true;\n\n\t\t\t} else\n\n\t\t\t\tdelete this.error[name];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t}\n\n\tclass WarbleModel {\n\n\t\tconstructor(model) {\n\n\t\t\tif (typeof model === 'object')\n\n\t\t\t\tthis.model = model;\n\n\t\t\telse\n\n\t\t\t\tthrow new Error('WarbleModel expects an object.');\n\n\t\t}\n\n\t\tvalidate(data) {\n\n\t\t\tif (typeof data === 'object') {\n\n\t\t\t\tlet\n\n\t\t\t\t\tresponse = {\n\t\t\t\t\t\tresults: {},\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tvalid: true,\n\t\t\t\t\t\tinvalid: false\n\t\t\t\t\t};\n\n\t\t\t\tfor (let index in this.model) {\n\n\t\t\t\t\tlet value = new WarbleFragment(data[index]);\n\n\t\t\t\t\tif (typeof this.model[index] === 'object')\n\n\t\t\t\t\t\tfor (let validation in this.model[index])\n\n\t\t\t\t\t\t\tif (value.validate(validation, this.model[index][validation], data).invalid)\n\n\t\t\t\t\t\t\t\t[response.valid, response.invalid] = [false, true];\n\n\t\t\t\t\tresponse.results[index] = value;\n\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\n\t\t\t} else\n\n\t\t\t\tthrow new Error('WarbleModel.validate expects an object.');\n\n\t\t}\n\n\t}\n\n\tclass Warble extends WarbleCore {\n\n\t\tmodel(model) {\n\n\t\t\treturn new WarbleModel(model);\n\n\t\t}\n\n\t\tvalidate(value, options) {\n\n\t\t\tif (typeof options === 'object') {\n\n\t\t\t\tvar value = new WarbleFragment(value);\n\n\t\t\t\tfor (let index in options)\n\n\t\t\t\t\tvalue.validate(index, options[index]);\n\n\t\t\t\treturn value;\n\n\t\t\t} else\n\n\t\t\t\tthrow new Error('Warble.validate expects an object.');\n\n\t\t}\n\n\t}\n\n\tvar warble = new Warble;\n\n\tif (typeof module === 'object' && typeof module.exports === 'object')\n\n\t\tmodule.exports = warble;\n\n};\n"]}