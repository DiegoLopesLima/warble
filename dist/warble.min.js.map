{"version":3,"sources":["warble.js"],"names":["specificTypes","forEach","value","toLowerCase","Core","regex","email","numeric","integer","positive","negative","subtypes","test","even","odd","validations","required","isRequired","undefined","pattern","core","is","RegExp","min","Infinity","Number","max","minlength","length","maxlength","type","types","range","equal","to","hasOwnProperty","conditional","options","index","size","instance","object","toString","call","getDetails","response","Response","data","valid","ResponseFragment","status","name","param","parent","toUpperCase","substr","Model","model","Error","setData","validate","validation","Warble","error","warble","module","exports"],"mappings":"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","file":"warble.min.js","sourcesContent":["{\r\n\r\n\tlet specificTypes = {};\r\n\r\n\t[\r\n\t\t'Boolean',\r\n\t\t'Number',\r\n\t\t'String',\r\n\t\t'Function',\r\n\t\t'Array',\r\n\t\t'Date',\r\n\t\t'RegExp',\r\n\t\t'Object',\r\n\t\t'Error',\r\n\t\t'Symbol'\r\n\t]\r\n\r\n\t\t.forEach(value => specificTypes[`[object ${value}]`] = value.toLowerCase());\r\n\r\n\tclass Core {\r\n\r\n\t\tconstructor() {\r\n\r\n\t\t\tthis.regex = {\r\n\t\t\t\temail: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\r\n\t\t\t\tnumeric: /^\\-?\\d+(?:\\.\\d+)?$/,\r\n\t\t\t\tinteger: /^\\-?\\d+$/,\r\n\t\t\t\tpositive: /^\\d+(?:\\.\\d+)?$/,\r\n\t\t\t\tnegative: /^\\-\\d+(?:\\.\\d+)?$/\r\n\t\t\t};\r\n\r\n\t\t\tvar { regex } = this;\r\n\r\n\t\t\tthis.subtypes = {\r\n\t\t\t\temail: value => regex.email.test(value),\r\n\t\t\t\tnumeric: value => regex.numeric.test(value),\r\n\t\t\t\tinteger: value => regex.integer.test(value),\r\n\t\t\t\tpositive: value => regex.positive.test(value),\r\n\t\t\t\tnegative: value => regex.negative.test(value),\r\n\t\t\t\teven: value => value % 2 === 0,\r\n\t\t\t\todd: value => value % 2 > 0\r\n\t\t\t};\r\n\r\n\t\t\tthis.validations = {\r\n\t\t\t\trequired: (value, isRequired) => isRequired ? value !== undefined : true,\r\n\t\t\t\tpattern: (value, pattern) => (core.is(pattern, 'regexp') ? pattern : new RegExp(pattern)).test(value),\r\n\t\t\t\tmin: (value, min = -Infinity) => (Number(value) || 0) >= (Number(min) || 0),\r\n\t\t\t\tmax: (value, max = Infinity) => (Number(value) || 0) <= (Number(max) || 0),\r\n\t\t\t\tminlength: (value, min = 0) => typeof value === 'string' ? value.length >= (Number(min) || 0) : false,\r\n\t\t\t\tmaxlength: (value, max = Infinity) => typeof value === 'string' ? value.length <= (Number(max) || 0) : false,\r\n\t\t\t\ttype: (value, type) => core.type(value) === type,\r\n\t\t\t\tis: (value, types) => core.is(value, types, true),\r\n\t\t\t\trange: (value, range = [-Infinity, Infinity]) => (core.is(range, 'array') && range.length > 1) ? Number(value) >= Number(range[0]) && Number(value) <= Number(range[1]) : false,\r\n\t\t\t\tequal(value, to)  {\r\n\r\n\t\t\t\t\treturn typeof this === 'object' && this.hasOwnProperty(to) ? value === this[to] : false;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tconditional: (value, conditional) => conditional(value),\r\n\t\t\t\toptions(value, options) {\r\n\r\n\t\t\t\t\tif (core.is(options, 'array'))\r\n\r\n\t\t\t\t\t\tfor (let index = 0, size = options.length; index < size; index++)\r\n\r\n\t\t\t\t\t\t\tif (value === options[index])\r\n\r\n\t\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tinstance: (value, object) => value instanceof object\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\ttype(value) {\r\n\r\n\t\t\treturn value === null ? 'null' : (typeof value === 'object' || typeof value === 'function' ? specificTypes[specificTypes.toString.call(value)] || 'object' : typeof value);\r\n\r\n\t\t}\r\n\r\n\t\tis(value, types, getDetails) {\r\n\r\n\t\t\tvar\r\n\r\n\t\t\t\tresponse = {},\r\n\r\n\t\t\t\t{ subtypes, type } = this;\r\n\r\n\t\t\tif (type(types) === 'array') {\r\n\r\n\t\t\t\tfor (let index = 0, size = types.length; index < size; index++) {\r\n\r\n\t\t\t\t\tlet test = subtypes[types[index]];\r\n\r\n\t\t\t\t\tif (typeof test === 'function')\r\n\r\n\t\t\t\t\t\tresponse[types[index]] = test.call(this, value);\r\n\r\n\t\t\t\t\telse\r\n\r\n\t\t\t\t\t\tresponse[types[index]] = type(value) === types[index];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (typeof subtypes[types] === 'function')\r\n\r\n\t\t\t\tresponse[types] = subtypes[types].call(this, value);\r\n\r\n\t\t\telse\r\n\r\n\t\t\t\tresponse[types] = type(value) === types;\r\n\r\n\t\t\tif (getDetails)\r\n\r\n\t\t\t\treturn response;\r\n\r\n\t\t\tfor (let index in response)\r\n\r\n\t\t\t\tif (!response[index])\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet core = new Core;\r\n\r\n\tclass Response {\r\n\r\n\t\tconstructor() {\r\n\r\n\t\t\tthis.data = {};\r\n\r\n\t\t\tthis.valid = true;\r\n\r\n\t\t}\r\n\r\n\t\tsetData(index, value) {\r\n\r\n\t\t\tthis.data[index] = value;\r\n\r\n\t\t\tif (!value.valid)\r\n\r\n\t\t\t\tthis.valid = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass ResponseFragment {\r\n\r\n\t\tconstructor(value) {\r\n\r\n\t\t\tthis.value = value;\r\n\r\n\t\t\tthis.valid = true;\r\n\r\n\t\t\tthis.status = {};\r\n\r\n\t\t}\r\n\r\n\t\tvalidate(name, param, parent) {\r\n\r\n\t\t\tvar response = typeof core.validations[name] === 'function' ? core.validations[name].call(parent, this.value, param) : true;\r\n\r\n\t\t\tif (!response)\r\n\r\n\t\t\t\tthis.valid = false;\r\n\r\n\t\t\tif (typeof response === 'object') {\r\n\r\n\t\t\t\tlet status = true;\r\n\r\n\t\t\t\tfor (let index in response) {\r\n\r\n\t\t\t\t\tthis.status[name + index[0].toUpperCase() + index.substr(1)] = response[index];\r\n\r\n\t\t\t\t\tif (!response[index])\r\n\r\n\t\t\t\t\t\tstatus = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.status[name] = status;\r\n\r\n\t\t\t} else\r\n\r\n\t\t\t\tthis.status[name] = response;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Model {\r\n\r\n\t\tconstructor(model) {\r\n\r\n\t\t\tif (typeof model === 'object')\r\n\r\n\t\t\t\tthis.model = model;\r\n\r\n\t\t\telse\r\n\r\n\t\t\t\tthrow new Error('The expected param must be an object.');\r\n\r\n\t\t}\r\n\r\n\t\tvalidate(data) {\r\n\r\n\t\t\tif (typeof data === 'object') {\r\n\r\n\t\t\t\tlet response = new Response;\r\n\r\n\t\t\t\tfor (let index in this.model) {\r\n\r\n\t\t\t\t\tlet value = new ResponseFragment(data[index]);\r\n\r\n\t\t\t\t\tif (this.model[index] instanceof Model)\r\n\r\n\t\t\t\t\t\tresponse.setData(index, this.model[index].validate(data[index]));\r\n\r\n\t\t\t\t\telse if (typeof this.model[index] === 'object') {\r\n\r\n\t\t\t\t\t\tfor (let validation in this.model[index])\r\n\r\n\t\t\t\t\t\t\tvalue.validate(validation, this.model[index][validation], data)\r\n\r\n\t\t\t\t\t\tresponse.setData(index, value);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n\r\n\t\t\t} else\r\n\r\n\t\t\t\tthrow new Error('The expected param must be an object.');\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclass Warble extends Core {\r\n\r\n\t\tmodel(model) {\r\n\r\n\t\t\treturn new Model(model);\r\n\r\n\t\t}\r\n\r\n\t\tvalidate(value, options) {\r\n\r\n\t\t\tif (typeof options === 'object') {\r\n\r\n\t\t\t\tvar value = new ResponseFragment(value);\r\n\r\n\t\t\t\tfor (let index in options)\r\n\r\n\t\t\t\t\tvalue.validate(index, options[index]);\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else\r\n\r\n\t\t\t\tthrow error('The expected param must be an object.');\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar warble = new Warble;\r\n\r\n\tif (typeof module === 'object' && typeof module.exports === 'object')\r\n\r\n\t\tmodule.exports = warble;\r\n\r\n}\r\n"]}